# Documentation Preferences Configuration

# Environment Preferences
environment:
  os: macos                 # Options: macos, windows, linux
  shell: zsh                # Options: zsh, bash, powershell, cmd
  terminal_examples: true   # Whether to include terminal command examples

# AI Model Preferences
ai_models:
# Looking for community input on which models to use when calling these prompts. [this belongs in README.md not this file btw]

# Code Style Preferences
code_style:
  language_preferences:     # Preferred languages for code examples (in order)
    - typescript
    - javascript
    - python
  include_comments: true    # Whether to include comments in code examples
  
# Documentation Style
documentation:
  detail_level: medium      # Options: minimal, medium, comprehensive
  include_diagrams: true    # Whether to include diagrams described in markdown
  code_block_style: syntax  # Options: plain, syntax (with highlighting)
  
# Content Preferences
content:
  audience: developers      # Options: developers, managers, mixed
  tone: technical           # Options: technical, conversational, formal
  format: markdown          # Options: markdown, html, asciidoc, text

# Visualization Preferences
visualization:
  flowcharts:
    type: "graphviz"        # Options: ascii, plantuml, graphviz, none (preferred is graphviz)
    graphviz_format: |
      Example format:
      ```dot
      digraph G {
        rankdir=LR;
        node [shape=box, style=rounded];
        Input -> Process -> Output;
        Process -> Error;
      }
      ```
    ascii_format: |
      Only if graphviz isn't available:
      +-------+     +-------+     +--------+
      | Input |---->| Proc. |---->| Output |
      +-------+     +-------+     +--------+
                        |
                        v
                    +-------+
                    | Error |
                    +-------+
    alternatives: |
      Fallback options:
      1. ASCII art (simple but limited)
      2. PlantUML (good for sequence diagrams)
      DO NOT use mermaid unless specifically requested
  tree_structure:
    use_command: "find . -type f -not -path '*/node_modules/*' -not -path '*/\.*' | sort"
    format: |
      project-root/
      ├── src/
      │   ├── components/
      │   │   └── Component.tsx
      │   └── utils/
      │       └── helpers.ts
      └── package.json
  
# Technical Documentation Preferences
tech_docs:
  logging:
    include_examples: true       # Whether to include logging examples
    preferred_method: "console"  # Options: console, winston, custom
  testing:
    framework: "jest"           # Options: jest, mocha, etc.
    include_test_examples: true # Whether to include test examples
  env_management:
    include_env_setup: true     # Whether to include environment setup instructions
    format: ".env"              # Options: .env, process.env, config files

# Example Format (for the LLM to follow)
examples:
  terminal:
    format: "```zsh\n$ command\noutput\n```"
    avoid_commands: ["cd", "ls"]  # Commands to avoid in examples
  code:
    format: "```typescript\n// code\n```" 